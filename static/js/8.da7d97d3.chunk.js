(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[8],{285:function(e,t,a){e.exports=a.p+"static/media/world.136490c6.png"},337:function(e,t,a){"use strict";a.r(t);var r=a(2),n=a(0),o=a.n(n),i=a(3),l=a(47),c=a(52),s=a(285),u=a.n(s),p=[{property:"items",description:"AutoComplete options",default:"",type:"string[] | object[]",value:""},{property:"itemKey",description:"Set if you pass items as array of objects",default:"",type:"string",value:""},{property:"iconKey",description:"Set icon",default:"",type:"string",value:""},{property:"avatarKey",description:"Set avatar",default:"",type:"string",value:""},{property:"value",description:"AutoComplete value",default:"",type:"string",value:""},{property:"onChange",description:"Invokes on input or option selection",default:"",type:"function",value:""},{property:"size",description:"Set select size",default:"",type:"string",value:"medium | large"},{property:"contentMaxHeight",description:"Set dropdown content max height (if set overflow-y: auto enabled)",default:"",type:"string | number",value:""},{property:"label",description:"Set select label",default:"",type:"string",value:""},{property:"placeholder",description:"Set placeholder",default:"",type:"string",value:""},{property:"color",description:"Set select color",default:"",type:"string",value:"primary | info | success | error"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth | rounded"},{property:"prefix",description:"Set prefix",default:"",type:"ReactNode | string | number",value:""},{property:"suffix",description:"Set suffix",default:"",type:"ReactNode | string | number",value:""},{property:"clearable",description:"Enable value clearing",default:"false",type:"boolean",value:"true | false"},{property:"onClear",description:"Invokes on clear icon click (required with clearable prop)",default:"",type:"function",value:""},{property:"loading",description:"Set loading state",default:"false",type:"boolean",value:"true | false"},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"disabled",description:"Disable AutoComplete",default:"false",type:"boolean",value:"true | false"},{property:"required",description:"Set required flag",default:"false",type:"boolean",value:"true | false"},{property:"readOnly",description:"Set read only flag",default:"false",type:"boolean",value:"true | false"},{property:"style",description:"Set a custom inline styles",default:"",type:"string",value:""},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],m=["primary","info","success","error"],d=["default","medium","large"],y=["default","tile","rounded","smooth"],f=["none","image","icon"];t.default=function(){var e=Object(n.useState)(""),t=Object(r.a)(e,2),a=(t[0],t[1]),s=Object(n.useState)("primary"),h=Object(r.a)(s,2),g=h[0],b=h[1],k=Object(n.useState)(d[0]),v=Object(r.a)(k,2),S=v[0],E=v[1],C=Object(n.useState)(y[0]),w=Object(r.a)(C,2),x=w[0],N=w[1],j=Object(n.useState)(!1),O=Object(r.a)(j,2),K=O[0],z=O[1],L=Object(n.useState)(!1),T=Object(r.a)(L,2),D=T[0],I=T[1],A=Object(n.useState)(!0),R=Object(r.a)(A,2),B=R[0],H=R[1],Q=Object(n.useState)(!0),U=Object(r.a)(Q,2),M=U[0],P=U[1],J=Object(n.useState)(!0),V=Object(r.a)(J,2),F=V[0],q=V[1],G=Object(n.useState)(!0),W=Object(r.a)(G,2),_=W[0],Y=W[1],X=Object(n.useState)(!1),Z=Object(r.a)(X,2),$=Z[0],ee=Z[1],te=Object(n.useState)(!0),ae=Object(r.a)(te,2),re=ae[0],ne=ae[1],oe=Object(n.useState)(f[0]),ie=Object(r.a)(oe,2),le=ie[0],ce=ie[1],se=Object(n.useState)(!1),ue=Object(r.a)(se,2),pe=ue[0],me=ue[1];return o.a.createElement(i.V.Consumer,null,(function(e){return o.a.createElement(l.a,{usage:"// Usage examples\nimport React, { useState } from 'react';\nimport { AutoComplete } from '@assenti/react-ui-components';\n\nconst countries = [\n    { country: 'Kazakhstan' }, \n    { country: 'Russia' }, \n    { country: 'USA' }, \n    { country: 'United Kingdom' }, \n    { country: 'Canada' }, \n    { country: 'Germany' }, \n    { country: 'France' }, \n    { country: 'China' },\n    { country: 'Japan' },\n    { country: 'South Korea' }\n]\n\nfunction Example() {\n    const [country, setCountry] = useState('');\n\n    return (\n        <>\n            <AutoComplete\n                items={countries}\n                style={{ width: 300 }}\n                contentMaxHeight={300}\n                itemKey=\"country\"\n                color=\"primary\"\n                label=\"Countries\"\n                placeholder=\"Choose your favourive country\"\n                onItemClick={item => setCountry(item.country)}\n                clearable\n                onClear={() => setCountry('')}\n                listHeader={\n                    <div className=\"fz-9 text-info py-10\">\n                        Start typing your favourite country\n                    </div>}\n                footer={(filteredLength) => \n                    <div className=\"text-right fz-8 text-info px-10 py-15\">\n                        {filteredLength} results\n                    </div>}\n                prefix={<Icon name=\"earth\"/>}\n                suffix={<Icon name=\"chevron-down\"/>}/>\n        </>\n    )\n}",apiDescItems:p,apiSearchable:!0,componentName:"<AutoComplete/>"},o.a.createElement(i.K,{items:m,dark:e,prefix:o.a.createElement(i.z,{name:"brush"}),width:200,label:"Color",color:"primary",className:"my-5",value:g,onChange:function(e){return b(e)}}),o.a.createElement("br",null),o.a.createElement(i.K,{items:d,prefix:o.a.createElement(i.z,{name:"format-size"}),width:200,dark:e,label:"Size",color:"primary",className:"my-5",value:S,onChange:function(e){return E(e)}}),o.a.createElement("br",null),o.a.createElement(i.K,{items:y,prefix:o.a.createElement(i.z,{name:"shape"}),width:200,dark:e,label:"Border type",color:"primary",className:"my-5",value:x,onChange:function(e){return N(e)}}),o.a.createElement("br",null),o.a.createElement(i.Q,{check:K,color:"primary",rightLabel:"Disabled",className:"my-10",onChange:function(){return z(!K)}}),o.a.createElement(i.Q,{check:D,color:"primary",rightLabel:"Loading",className:"my-10",onChange:function(){return I(!D)}}),o.a.createElement("br",null),o.a.createElement(i.Q,{check:B,color:"primary",rightLabel:"Prefix",className:"my-10",onChange:function(){return H(!B)}}),o.a.createElement(i.Q,{check:M,color:"primary",rightLabel:"Suffix",className:"my-10",onChange:function(){return P(!M)}}),o.a.createElement(i.Q,{check:F,color:"primary",rightLabel:"Label",className:"my-10",onChange:function(){return q(!F)}}),o.a.createElement("br",null),o.a.createElement(i.Q,{check:re,color:"primary",rightLabel:"List header",className:"my-10",onChange:function(){return ne(!re)}}),o.a.createElement(i.Q,{check:_,color:"primary",rightLabel:"List footer",className:"my-10",onChange:function(){return Y(!_)}}),o.a.createElement("br",null),o.a.createElement(i.Q,{check:pe,color:"primary",rightLabel:"WhiteBackground",className:"my-10",onChange:function(){return me(!pe)}}),o.a.createElement(i.Q,{check:$,color:"primary",rightLabel:"Set content max height (in this exmaple: 200px)",className:"my-10",onChange:function(){return ee(!$)}}),o.a.createElement("br",null),o.a.createElement(i.I,{options:f,value:le,name:"type",className:"mt-10",onChange:function(e){return ce(e)}}),o.a.createElement(i.r,null),o.a.createElement(i.b,{items:c.a,style:{width:300},dark:e,contentMaxHeight:$?200:null,itemKey:"country",iconKey:"icon"===le?"icon":null,avatarKey:"image"===le?u.a:null,avatarBorderType:"rounded",avatarSize:24,borderType:x,color:g,size:S,loading:D,label:F?"Countries":null,placeholder:"Choose your favourive country",onItemClick:function(e){return a(e.country)},clearable:!0,onClear:function(){return a("")},className:"my-10",listHeader:re?o.a.createElement("div",{className:"fz-9 text-info py-10"},"Start typing your favourite country"):null,footer:function(e){return o.a.createElement("div",{className:"text-right fz-8 text-info px-10 py-15"},e," results")},disabled:K,whiteBackground:pe,prefix:B?o.a.createElement(i.z,{name:"earth"}):null,suffix:M?o.a.createElement(i.z,{name:"chevron-down"}):null}))}))}},47:function(e,t,a){"use strict";var r=a(2),n=a(0),o=a.n(n),i=a(3),l=a(345),c=a(289),s=a(290),u=["property","description","default","type","value"];t.a=function(e){var t=Object(n.useRef)(),a=Object(n.useState)(!1),p=Object(r.a)(a,2),m=(p[0],p[1]);return o.a.createElement(i.V.Consumer,null,(function(a){return o.a.createElement("div",{className:"rui-page",ref:t},o.a.createElement("div",{className:"rui-page-title"},e.componentName," Component",o.a.createElement(i.o,{noTooltip:!0,className:"ml-10",text:e.componentName,dark:a})),o.a.createElement(i.k,{dark:a,header:o.a.createElement("div",{className:"row align-center pb-10"},o.a.createElement(i.z,{name:"bulb",size:18,color:"#42a5f5",className:"mr-8"}),o.a.createElement("h4",{className:"my-0 text-info"},"Usage"))},e.children,o.a.createElement(i.n,{className:"mt-10",extra:o.a.createElement(i.o,{defaultText:"Copy code",text:e.usage,dark:a}),onChange:function(e){return m(e)},customToggler:o.a.createElement(i.h,{className:"ml-20",name:"Code",icon:"code",color:"info"}),dark:a},o.a.createElement(l.a,{language:"jsx",style:a?c.a:s.a},e.usage))),e.backTopBtn?o.a.createElement(i.e,{dark:!0,setRef:t,size:"medium",tooltip:"Up"}):null,o.a.createElement(i.k,{className:"mt-10 overflow-y",style:{maxWidth:"100%"}},e.apiDescItems.length>0&&o.a.createElement(i.R,{tableTitle:o.a.createElement("h2",{className:"ml-10"},e.apiHeader?e.apiHeader:"API"),dark:a,headers:["Property","Description","Default","Type","Value"],items:e.apiDescItems,index:!0,bordered:!0,searchable:e.apiSearchable,searchKey:"property",itemTitles:u}),e.content),e.apiDescItems2&&o.a.createElement(i.k,{className:"mt-10"},e.apiDescItems2.length>0&&o.a.createElement(i.R,{tableTitle:o.a.createElement("h2",{className:"ml-10"},e.apiHeader2),dark:a,headers:["Property","Description","Default","Type","Value"],items:e.apiDescItems2,index:!0,bordered:!0,searchable:e.apiSearchable2,searchKey:"property",itemTitles:u}),e.content))}))}},52:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var r=[{country:"Kazakhstan",cities:["Nur-Sultan","Almaty","Shymkent"],icon:"flag",url:"https://en.wikipedia.org/wiki/Kazakhstan"},{country:"Russia",cities:["Moscow","St. Petersburg","Krasnodar"],icon:"flag",url:"https://en.wikipedia.org/wiki/Russia"},{country:"USA",cities:["Washington, D.C.","New York City","San Francisco"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_States"},{country:"United Kingdom",cities:["London","York","Manchester"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_Kingdom"},{country:"Canada",cities:["Ottawa","Toronto","Vancouver"],icon:"flag",url:"https://en.wikipedia.org/wiki/Canada"},{country:"Germany",cities:["Berlin","Munich","Hamburg"],icon:"flag",url:"https://en.wikipedia.org/wiki/Germany"},{country:"France",cities:["Paris","Nice","Marselle"],icon:"flag",url:"https://en.wikipedia.org/wiki/France"},{country:"China",cities:["Beijing","Shanghai","Shenzhen"],icon:"flag",url:"https://en.wikipedia.org/wiki/China"},{country:"Japan",cities:["Tokyo","Osaka","Kyoto"],icon:"flag",url:"https://en.wikipedia.org/wiki/Japan"},{country:"South Korea",cities:["Seoul","Busan","Daegu"],icon:"flag",url:"https://en.wikipedia.org/wiki/South_Korea"}]}}]);